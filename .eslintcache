[{"D:\\___TransferredFromMusic\\01-starting-project\\src\\index.js":"1","D:\\___TransferredFromMusic\\01-starting-project\\src\\App.js":"2","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Navbar.js":"3","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeParentBody.js":"4","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeRow.js":"5","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeNodePair.js":"6","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeNode.js":"7","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Button.js":"8","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeSandwich.js":"9","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\Line.js":"10","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Message.js":"11","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Dashboard.js":"12","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\UserConsole.js":"13","D:\\___TransferredFromMusic\\01-starting-project\\src\\Logic\\TreeMethods.js":"14","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\Copy.js":"15","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Spinner.js":"16","D:\\___TransferredFromMusic\\01-starting-project\\src\\Logic\\CDriver.js":"17","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\DummyData.js":"18","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\MenuIcon.js":"19","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\Footer.js":"20","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\InstagramIcon.js":"21","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\Checkbox.js":"22"},{"size":169,"mtime":1643978355507,"results":"23","hashOfConfig":"24"},{"size":9494,"mtime":1648488686188,"results":"25","hashOfConfig":"24"},{"size":911,"mtime":1648062434206,"results":"26","hashOfConfig":"24"},{"size":326,"mtime":1644935342326,"results":"27","hashOfConfig":"24"},{"size":937,"mtime":1646059411151,"results":"28","hashOfConfig":"24"},{"size":1178,"mtime":1646703909015,"results":"29","hashOfConfig":"24"},{"size":535,"mtime":1646927290612,"results":"30","hashOfConfig":"24"},{"size":320,"mtime":1645940960748,"results":"31","hashOfConfig":"24"},{"size":534,"mtime":1644935342327,"results":"32","hashOfConfig":"24"},{"size":5007,"mtime":1645945398035,"results":"33","hashOfConfig":"24"},{"size":226,"mtime":1645944036579,"results":"34","hashOfConfig":"24"},{"size":4091,"mtime":1648488659207,"results":"35","hashOfConfig":"24"},{"size":968,"mtime":1648264761205,"results":"36","hashOfConfig":"24"},{"size":4466,"mtime":1647962295466,"results":"37","hashOfConfig":"24"},{"size":490,"mtime":1648062448915,"results":"38","hashOfConfig":"24"},{"size":181,"mtime":1646927769917,"results":"39","hashOfConfig":"24"},{"size":239,"mtime":1647969752528,"results":"40","hashOfConfig":"24"},{"size":4827,"mtime":1648062441079,"results":"41","hashOfConfig":"24"},{"size":1035,"mtime":1648214639784,"results":"42","hashOfConfig":"24"},{"size":445,"mtime":1648488723506,"results":"43","hashOfConfig":"24"},{"size":4896,"mtime":1648468172240,"results":"44","hashOfConfig":"24"},{"size":235,"mtime":1648476920931,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"11cymbo",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\___TransferredFromMusic\\01-starting-project\\src\\index.js",[],["94","95"],"D:\\___TransferredFromMusic\\01-starting-project\\src\\App.js",["96","97","98","99","100","101","102","103"],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Navbar.js",["104"],"import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport Button from './Button';\r\nimport MenuIcon from '../Icons/MenuIcon';\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className={classes.navbar}>\r\n            {/* <span  onClick={expandSidebar}><MenuIcon/></span> */}\r\n            <MenuIcon expandSidebar={props.expandSidebar}/>\r\n                <span className={classes.header}>Broccoli <small style={{fontSize:'0.7em'}}>by Unamed Inc</small></span>\r\n            {/* <Button type=\"button\" onClick={props.addRow}>Add new row</Button>\r\n            <Button type=\"button\" onClick={props.toggleNullState}>{props.nullState} Empty Nodes</Button>\r\n            <Button type=\"button\" onClick={props.invertBinaryTree}>Invert Binary Tree</Button> */}\r\n            </div>\r\n            \r\n        \r\n        </>\r\n    \r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Navbar;","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeParentBody.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeRow.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeNodePair.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeNode.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Button.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\TreeSandwich.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\Line.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Message.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Dashboard.js",["105","106"],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\UserConsole.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\Logic\\TreeMethods.js",["107"],"import {tree} from \"../App\";\r\n\r\nexport const func = (opt) => {\r\n    \r\n    let  nodeLeftPos, nodeRightPos, nodes = [];\r\n    let res = [];\r\n    let count = 0;\r\n    \r\n\r\n\r\n    class Node{\r\n        constructor(value){\r\n            this.value = value;\r\n            this.left = null;\r\n            this.right = null;\r\n        }\r\n    }\r\n    \r\n    class BinarySearchTree{\r\n        constructor(arr){\r\n            this.arr = arr;\r\n            this.root = new Node(arr[0]);\r\n    \r\n        \r\n        }\r\n    \r\n        Validate(node = this.root){\r\n            count++;\r\n            console.log(`Left : ${node.left.value} Right : ${node.right.value}`);\r\n            if(node.left.value < node.right.value){\r\n                this.Validate(node.left);\r\n                this.Validate(node.right);\r\n                \r\n            }else{\r\n                return [0,count];\r\n            }\r\n            return [1,1];\r\n        }\r\n\r\n        InorderTraversal(node = this.root){\r\n            \r\n            if(node.value !== 0){\r\n                this.InorderTraversal(node.left);\r\n                // console.log(node.value);\r\n                res.push(node.value);\r\n                this.InorderTraversal(node.right);\r\n            }\r\n    \r\n            \r\n        }\r\n\r\n        PostorderTraversal(node = this.root){\r\n            if(node.value !== 0){\r\n                this.PreorderTraversal(node.left);\r\n                this.PreorderTraversal(node.right);\r\n                // console.log(node.value);\r\n                res.push(node.value);\r\n            }\r\n        }\r\n\r\n        PreorderTraversal(node = this.root){\r\n            if(node.value !== 0){\r\n                // console.log(node.value);\r\n                res.push(node.value);\r\n                this.PostorderTraversal(node.left);\r\n                this.PostorderTraversal(node.right);\r\n            }\r\n        }\r\n    \r\n    \r\n        start(){\r\n            \r\n            \r\n            for(let x of this.arr.slice(1,)){\r\n                nodes.push(new Node(x));\r\n            }\r\n    \r\n            nodes = [this.root, ...nodes];\r\n    \r\n            this.root.left = nodes[1];\r\n            this.root.right = nodes[2];\r\n    \r\n            nodeLeftPos = 3;\r\n            nodeRightPos = 4;\r\n    \r\n        }\r\n    \r\n        init(){\r\n    \r\n    \r\n            let counter = 1;\r\n            while(nodeRightPos<nodes.length){\r\n                nodes[counter].left = nodes[nodeLeftPos];\r\n                nodes[counter].right = nodes[nodeRightPos];\r\n                nodeLeftPos += 2;\r\n                nodeRightPos += 2;\r\n                counter++;\r\n            }\r\n    \r\n            \r\n            \r\n        }\r\n    }\r\n    let ele = (Object.values(tree)).map(x => x.value);\r\n    \r\n    let Tree = new BinarySearchTree(ele);\r\n    Tree.start();\r\n    Tree.init();\r\n    \r\n    console.log(nodes);\r\n    \r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            if((Tree.Validate())[0]){\r\n                switch(opt){\r\n                    case 1:\r\n                        console.log(\"Inorder Traversal\");\r\n                        Tree.InorderTraversal();\r\n                        break;\r\n                    case 2:\r\n                        console.log(\"Preorder Traversal\");\r\n                        Tree.PreorderTraversal();\r\n                        break;\r\n                    case 3:\r\n                        console.log(\"Postorder Traversal\");\r\n                        Tree.PostorderTraversal();\r\n                        break;\r\n                }\r\n    \r\n                resolve([1,res]);\r\n    \r\n            }else{\r\n                resolve([0, count]);\r\n            }\r\n        }, 200);\r\n    })\r\n\r\n    \r\n        // return new Promise((resolve) => {\r\n        //     if((Tree.Validate())[0]){\r\n        //         switch(opt){\r\n        //             case 1:\r\n        //                 console.log(\"Inorder Traversal\");\r\n        //                 Tree.InorderTraversal();\r\n        //                 break;\r\n        //             case 2:\r\n        //                 console.log(\"Preorder Traversal\");\r\n        //                 Tree.PreorderTraversal();\r\n        //                 break;\r\n        //             case 3:\r\n        //                 console.log(\"Postorder Traversal\");\r\n        //                 Tree.PostorderTraversal();\r\n        //                 break;\r\n        //         }\r\n\r\n        //         resolve([1,res]);\r\n\r\n        //     }else{\r\n        //         resolve([0, count]);\r\n        //     }\r\n        // });\r\n    \r\n\r\n\r\n}\r\n\r\n","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\Copy.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\Spinner.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\Logic\\CDriver.js",["108","109","110"],"import {tree} from '../App';\r\nconst helper = require('./CGenerator.json');\r\n\r\n\r\nexport const CDriverCode = () => {\r\n\r\n    let resultantDriver = '';\r\n    // console.log(helper[0].header);\r\n    // console.log(helper[0].structure);\r\n    \r\n\r\n}","D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\UI\\DummyData.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\MenuIcon.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\TreeStructure\\Footer.js",["111"],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\InstagramIcon.js",[],"D:\\___TransferredFromMusic\\01-starting-project\\src\\components\\Icons\\Checkbox.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":17},{"ruleId":"116","severity":1,"message":"120","line":57,"column":7,"nodeType":"118","messageId":"119","endLine":57,"endColumn":11},{"ruleId":"116","severity":1,"message":"121","line":67,"column":5,"nodeType":"118","messageId":"119","endLine":67,"endColumn":12},{"ruleId":"116","severity":1,"message":"122","line":69,"column":5,"nodeType":"118","messageId":"119","endLine":69,"endColumn":15},{"ruleId":"116","severity":1,"message":"123","line":71,"column":5,"nodeType":"118","messageId":"119","endLine":71,"endColumn":23},{"ruleId":"116","severity":1,"message":"124","line":84,"column":10,"nodeType":"118","messageId":"119","endLine":84,"endColumn":24},{"ruleId":"116","severity":1,"message":"125","line":84,"column":26,"nodeType":"118","messageId":"119","endLine":84,"endColumn":43},{"ruleId":"116","severity":1,"message":"126","line":87,"column":10,"nodeType":"118","messageId":"119","endLine":87,"endColumn":15},{"ruleId":"116","severity":1,"message":"127","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":89,"column":1,"nodeType":"130","messageId":"131","endLine":92,"endColumn":4},{"ruleId":"128","severity":1,"message":"129","line":96,"column":1,"nodeType":"130","messageId":"131","endLine":101,"endColumn":87},{"ruleId":"132","severity":1,"message":"133","line":115,"column":17,"nodeType":"134","messageId":"135","endLine":128,"endColumn":18},{"ruleId":"116","severity":1,"message":"136","line":1,"column":9,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"137","line":2,"column":7,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"138","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":24},{"ruleId":"116","severity":1,"message":"139","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":21},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'DummyData' is defined but never used.","Identifier","unusedVar","'root' is assigned a value but never used.","'nodeIds' is assigned a value but never used.","'treeheight' is assigned a value but never used.","'currentHeightNodes' is assigned a value but never used.","'nullVisibility' is assigned a value but never used.","'setNullVisibility' is assigned a value but never used.","'dummy' is assigned a value but never used.","'Button' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'tree' is defined but never used.","'helper' is assigned a value but never used.","'resultantDriver' is assigned a value but never used.","'InstagramIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]
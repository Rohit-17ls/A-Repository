{"version":3,"sources":["components/UI/Editor.module.css","components/UI/Dashboard.module.css","components/TreeStructure/TreeNodePair.module.css","components/UI/UserConsole.module.css","components/UI/Navbar.module.css","components/TreeStructure/TreeRow.module.css","components/TreeStructure/Footer.module.css","components/UI/Button.module.css","components/Icons/MenuIcon.module.css","components/TreeStructure/TreeParentBody.module.css","components/TreeStructure/TreeNode.module.css","components/TreeStructure/TreeSandwich.module.css","components/UI/Message.module.css","components/UI/Spinner.module.css","components/UI/Button.js","components/Icons/MenuIcon.js","components/UI/Navbar.js","components/TreeStructure/TreeParentBody.js","components/TreeStructure/TreeNode.js","components/TreeStructure/TreeNodePair.js","components/TreeStructure/Line.js","components/TreeStructure/TreeSandwich.js","components/TreeStructure/TreeRow.js","components/UI/Message.js","components/UI/Dashboard.js","components/Icons/Copy.js","components/UI/Spinner.js","components/UI/UserConsole.js","Logic/TreeMethods.js","Logic/CDriver.js","components/TreeStructure/Footer.js","components/Icons/CLanguageIcon.js","components/Icons/CPPLanguageIcon.js","components/Icons/GoLanguageIcon.js","components/Icons/JSLangaugeIcon.js","components/Icons/Locked.js","components/UI/Editor.js","App.js","index.js"],"names":["module","exports","Button","props","className","classes","button","type","onClick","children","MenuIcon","initWidth","holder","expandSidebar","viewBox","width","height","rx","ry","y","Navbar","navbar","header","style","fontSize","TreeParentBody","treeparentbody","TreeNode","node","show","placeholder","value","onChange","inputChangeHandler","identifier","visibility","TreeNodePair","result","id1","id2","show1","show2","value1","value2","setId","pair","pairwidth","justifyContent","Line","exceptRoot","inclination","transform","stroke","xmlns","xmlnsXlink","version","id","fill","strokeWidth","strokeLinecap","strokeLinejoin","strokeOpacity","strokeMiterlimit","d","TreeSandwich","arrows","pairs","sandwich","endif","Array","map","i","e","TreeRow","row","ind","Math","random","firstrow","classes1","singlenode","rootValue","rootId","Message","message","Dashboard","useState","text","action","actions","nullState","dashboardButtons","setDashboardButtons","dynamicButtonOrdering","setDynamicButtonOrdering","dashboard","ref","dashRef","dashboardControls","prevState","concat","slice","utilites","utility","checked","Copy","title","x","Spinner","spinner","UserConsole","consoleHolder","console","consoleHeader","fontWeight","document","getElementById","innerText","navigator","clipboard","writeText","loading","color","func","opt","nodeLeftPos","nodeRightPos","nodes","res","count","Node","this","left","right","BinarySearchTree","arr","root","log","Validate","InorderTraversal","push","PreorderTraversal","PostorderTraversal","counter","length","Tree","Object","values","tree","start","init","Promise","resolve","setTimeout","require","Footer","footer","icons","CLanguageIcon","fillRule","clipRule","CPPLanguageIcon","GoLanguageIcon","JSLanguageIcon","Locked","obj","langName","langCode","Editor","codeBlockRef","useRef","language","setLanguage","driverCode","setDriverCode","useEffect","hljs","registerLanguage","c","highlightElement","current","editor","languageBar","icon","background","copy","locked","edit","parent","error","indices","lastUnbalancedNode","App","setNullState","consoleMessage","setConsoleMessage","setHeight","setDummy","setLoading","currentPair","querySelector","swap","j","temp","invertBinaryTree","a","b","addRow","at","toggleNullState","newState","event","target","dataset","treeActionFunction","toString","classList","add","newWidth","expanded","ReactDOM","render"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,MAAQ,sBAAsB,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,uB,kBCAzND,EAAOC,QAAU,CAAC,UAAY,6BAA6B,kBAAoB,qCAAqC,OAAS,0BAA0B,SAAW,4BAA4B,QAAU,6B,iBCAxMD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,mC,gBCAjED,EAAOC,QAAU,CAAC,QAAU,6BAA6B,cAAgB,mCAAmC,cAAgB,qC,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,SAAW,4B,kBCAxDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,uB,uBCAvFD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,OAAS,2B,gBCA7DD,EAAOC,QAAU,CAAC,eAAiB,yC,gBCAnCD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,gBCAzDD,EAAOC,QAAU,CAAC,SAAW,iC,gBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,wB,y4DCiB7CC,EAdC,SAACC,GAIb,OAEI,wBAAQC,UAAS,UAAKD,EAAMC,WAAa,GAAxB,YAA8BC,IAAQC,QAAUC,KAAMJ,EAAMI,KAAMC,QAASL,EAAMK,QAAlG,SAA4GL,EAAMM,Y,iBC0B3GC,EAhCE,SAACP,GAEd,IAAIQ,GAAa,IASjB,OAEQ,aADJ,CACI,OAAKP,UAAWC,IAAQO,OAAQJ,QAT1B,WACVG,EAAaA,EAAmB,GAAN,IAE1BR,EAAMU,cAAcF,IAMhB,SAII,sBAAKG,QAAQ,aAAaC,MAAM,KAAKC,OAAO,KAA5C,UACI,sBAAMD,MAAM,MAAMC,OAAO,KAAKC,GAAG,KAAKC,GAAG,OACzC,sBAAMC,EAAE,KAAKJ,MAAM,MAAMC,OAAO,KAAKC,GAAG,KAAKC,GAAG,OAChD,sBAAMC,EAAE,KAAKJ,MAAM,MAAMC,OAAO,KAAKC,GAAG,KAAKC,GAAG,aCOrDE,EAxBA,SAACjB,GAIZ,OACI,mCACI,sBAAKC,UAAWC,IAAQgB,OAAxB,UAEA,cAAC,EAAD,CAAUR,cAAeV,EAAMU,gBAC3B,uBAAMT,UAAWC,IAAQiB,OAAzB,sBAA0C,uBAAOC,MAAO,CAACC,SAAS,SAAxB,oC,iBCO3CC,EApBQ,SAACtB,GAQpB,OAEI,yBAASC,UAAS,UAAKC,IAAQqB,eAAb,YAA+BvB,EAAMC,WAAvD,SAAqED,EAAMM,Y,kDCCpEkB,EAXE,SAACxB,GAQd,OAAQ,uBAAOC,UAAS,UAAKC,IAAQuB,KAAb,YAAsBzB,EAAM0B,KAAkB,GAAX,UAAiBC,YAAa3B,EAAM4B,OAAS,GAAIxB,KAAK,SAASyB,SAAU7B,EAAM8B,mBAAoB,UAAS9B,EAAM+B,WAAYX,MAAO,CAACY,WAAahC,EAAM0B,KAAkB,UAAX,aC8BhNO,EArCM,SAACjC,GAYlB,IAAIkC,EAAOC,EAAIC,EAAIC,EAAMC,EAAMC,EAAOC,EActC,OAVAL,GADAD,EAASlC,EAAMyC,SACF,GACbL,EAAMF,EAAO,GACbG,EAAQH,EAAO,GACfI,EAAQJ,EAAO,GACfK,EAASL,EAAO,GAChBM,EAASN,EAAO,GAMZ,sBAAKjC,UAAWC,IAAQwC,KAAMtB,MAAO,CAACR,MAAM,GAAD,OAAIZ,EAAM2C,UAAV,KAAwBC,eAAe,IAAlF,UACI,cAAC,EAAD,CAAUd,mBAAoB9B,EAAM8B,mBAAoBF,MAAOW,EAAQR,WAAYI,EAAKT,KAAMW,IAC9F,cAAC,EAAD,CAAUP,mBAAoB9B,EAAM8B,mBAAoBF,MAAOY,EAAQT,WAAYK,EAAKV,KAAMY,Q,iBCkB3FO,G,MAhDF,SAAC7C,GAEV,IAAMY,EAAUZ,EAAM8C,WAAgC9C,EAAMY,MAAvBZ,EAAMY,MAAM,EAC3CmC,EAAe/C,EAAMY,MAAM,EAAG,GAEpC,OAmBI,cAjBA,CAiBA,OAAKX,UAAU,iBAAiBmB,MAAO,CAACR,MAAM,GAAD,OAAKA,EAAL,MAA7C,UACI,qBAAKQ,MAAO,CAAC4B,UAAU,UAAD,OAAWD,EAAX,QAA8BE,OAAO,SAAUC,MAAM,6BAA6BC,WAAW,+BAA+BvC,MAAM,OAAOC,OAAO,QAAQF,QAAQ,WAAWyC,QAAQ,MAAzM,SACA,oBAAGC,GAAG,WAAN,UACA,sBAAMjC,MAAO,CAACkC,KAAM,OAAQC,YAAa,EAAGC,cAAe,OAAQC,eAAgB,QAASR,OAAQ,QAASS,cAAe,EAAGC,iBAAkB,GAAIC,EAAE,+CAA+CZ,UAAU,qDAChN,sBAAM5B,MAAO,CAACkC,KAAM,OAAQC,YAAa,EAAGC,cAAe,OAAQC,eAAgB,QAASR,OAAQ,QAASS,cAAe,EAAGC,iBAAkB,GAAIC,EAAE,8CAA8CZ,UAAU,qDAC/M,sBAAM5B,MAAO,CAACkC,KAAM,OAAQC,YAAa,EAAGC,cAAe,OAAQC,eAAgB,QAASR,OAAQ,QAASS,cAAe,EAAGC,iBAAkB,GAAIC,EAAE,+CAA+CZ,UAAU,0DAIhN,qBAAK5B,MAAO,CAAC4B,UAAU,WAAD,OAAYD,EAAZ,QAA+BE,OAAO,SAAUC,MAAM,6BAA6BC,WAAW,+BAA+BvC,MAAM,OAAOC,OAAO,QAAQF,QAAQ,WAAWyC,QAAQ,MAA1M,SACA,oBAAGC,GAAG,WAAN,UACA,sBAAMjC,MAAO,CAACkC,KAAM,OAAQC,YAAa,EAAGC,cAAe,OAAQC,eAAgB,QAASR,OAAQ,QAASS,cAAe,EAAGC,iBAAkB,GAAIC,EAAE,+CAA+CZ,UAAU,qDAChN,sBAAM5B,MAAO,CAACkC,KAAM,OAAQC,YAAa,EAAGC,cAAe,OAAQC,eAAgB,QAASR,OAAQ,QAASS,cAAe,EAAGC,iBAAkB,GAAIC,EAAE,8CAA8CZ,UAAU,qDAC/M,sBAAM5B,MAAO,CAACkC,KAAM,OAAQC,YAAa,EAAGC,cAAe,OAAQC,eAAgB,QAASR,OAAQ,QAASS,cAAe,EAAGC,iBAAkB,GAAIC,EAAE,+CAA+CZ,UAAU,+DChB7Ma,EApBM,SAAC7D,GAGlB,IAAM8D,EAAU9D,EAAM8C,WAAc,EAAkB,EAAb9C,EAAM+D,MAO/C,OAEI,qBAAK9D,UAAWC,IAAQ8D,SAAxB,SACKhE,EAAMiE,QAAUjE,EAAM+D,OAAS,YAAIG,MAAMJ,IAASK,KAAI,SAACC,EAAEC,GAAH,OAAS,cAAC,EAAD,CAAMzD,MAAO,IAAIZ,EAAM+D,MAAOjB,WAAY9C,EAAM8C,mBCU7GwB,EAnBC,SAACtE,GASb,OAEI,sBAAKC,UAAWC,IAAQqE,IAAxB,UACKvE,EAAM+D,MAAM,GAAK,YAAIG,MAAMlE,EAAM+D,QAAQI,KAAI,SAACC,EAAEI,GAAH,OAAW,cAAC,EAAD,CAAwC7B,UAAW,IAAI3C,EAAM+D,MAAOjC,mBAAoB9B,EAAM8B,mBAAoBW,MAAOzC,EAAMyC,OAA3GgC,KAAKC,OAAO,EAAE,UACzF1E,EAAM+D,OAAS,sBAAK9D,UAAWC,IAAQyE,SAAxB,UAAkC,qBAAK1E,UAAW2E,IAASC,WAAzB,SAAqC,cAAC,EAAD,CAAUjD,MAAO5B,EAAM8E,UAAWhD,mBAAoB9B,EAAM8B,mBAAoBC,WAAY/B,EAAM+E,OAAQrD,MAAM,MAAuB,cAAC,EAAD,CAAcuC,MAAO,EAAGF,MAAO,EAAGjB,WAAY,W,iBCX1QkC,EAPC,SAAChF,GACb,OACI,qBAAKC,UAAaC,IAAQ+E,QAA1B,SAAoCjF,EAAMiF,W,gBCyEnCC,EAvEG,SAAClF,GAEf,MAAgDmF,mBAAS,CAAC,CAACC,KAAK,gBAAkBC,OAAQrF,EAAMsF,QAAQ,IACxG,CAACF,KAAK,oBAAqBC,OAAQrF,EAAMsF,QAAQ,IACjD,CAACF,KAAK,qBAAsBC,OAAQrF,EAAMsF,QAAQ,IAClD,CAACF,KAAK,sBAAuBC,OAAQrF,EAAMsF,QAAQ,IACnD,CAACF,KAAK,qBAAsBC,OAAQrF,EAAMsF,QAAQ,IAClD,CAACF,KAAK,GAAD,OAAIpF,EAAMuF,UAAV,gBAAkCF,OAAQrF,EAAMsF,QAAQ,MAL7D,mBAAOE,EAAP,KAAyBC,EAAzB,KAOA,EAA0DN,oBAAS,GAAnE,mBAAOO,EAAP,KAA8BC,EAA9B,KAIA,OACI,0BAAS1F,UAAWC,IAAQ0F,UAAWC,IAAK7F,EAAM8F,QAAlD,UAEI,sBAAM7F,UAAWC,IAAQiB,OAAzB,uBACA,sBAAKlB,UAAWC,IAAQ6F,kBAAxB,UAYI,cAAC,EAAD,CAAQ3F,KAAK,SAASC,QAASL,EAAMsF,QAAQ,GAA7C,2BAEC,YAAIpB,MAAM,IAAIC,KAAI,SAACC,EAAGI,GAAJ,OAAY,eAAC,EAAD,CAAQpE,KAAK,SAASC,QAAS,WAE1DmF,EAAiBhB,GAAKa,SACnBK,GACCD,GAAoB,SAAAO,GAChB,OAAGxB,EAAM,EACE,CAACwB,EAAUxB,IAAMyB,OAAOD,EAAUE,MAAM,EAAE1B,IAAMyB,OAAOD,EAAUE,MAAM1B,EAAI,IAE3EwB,MARQ,cAchBR,EAAiBhB,GAAKY,KAdN,MAcvBZ,MAGR,qBAAKvE,UAAWC,IAAQiG,SAAxB,SACG,sBAAKlG,UAAWC,IAAQkG,QAAxB,oCAEK,uBAAOhG,KAAK,WAAWiG,QAASX,EAAuB7D,SAAU,WAAO8D,GAAyB,SAAAK,GAAS,OAAIA,oB,gBC9CvHM,EATF,WAET,OACI,sBAAKpD,MAAM,6BAA6BtC,MAAO,GAAIC,OAAQ,GAAIF,QAAQ,YAAY2C,KAAK,OAAOL,OAAO,eAAeM,YAAa,EAAGC,cAAc,QAAQC,eAAe,QAAQxD,UAAU,UAAUsG,MAAM,oBAAoB,cAAY,OAA5O,UAAmP,sBAAMC,EAAG,EAAGxF,EAAG,EAAGJ,MAAO,GAAIC,OAAQ,GAAIC,GAAI,EAAGC,GAAI,IAAK,sBAAM6C,EAAE,gE,iBCC7S6C,EAJC,WACZ,OAAO,qBAAKxG,UAAWC,IAAQwG,WCuBpBC,EArBK,SAAC3G,GAQjB,OACI,mCACI,yBAASC,UAAYC,IAAQ0G,cAAevD,GAAI,cAAhD,SACI,sBAAKpD,UAAWC,IAAQ2G,QAAxB,UACI,sBAAK5G,UAAWC,IAAQ4G,cAAxB,UAAuC,oBAAI1F,MAAO,CAAC2F,WAAa,QAAzB,yBAAmD/G,EAAMiF,QAAQ,IAAM,wBAAQ5E,QAV9G,WACpB,IAAI+E,EAAO4B,SAASC,eAAe,WAAWC,UAC9CC,UAAUC,UAAUC,UAAUjC,IAQ4F,SAAkC,cAAC,EAAD,SAC/IpF,EAAMsH,QAAY,cAAC,EAAD,IAAc,qBAAKjE,GAAI,UAAWjC,MAAO,CAACmG,MAAQvH,EAAMiF,QAAQ,GAAa,QAAR,OAAvD,SAA0EjF,EAAMiF,QAAQ,a,wBCjBhIuC,EAAO,SAACC,GAEjB,IAAKC,EAAaC,EAAcC,EAAQ,GACpCC,EAAM,GACNC,EAAQ,EAINC,EARmB,aASrB,WAAYnG,GAAO,oBACfoG,KAAKpG,MAAQA,EACboG,KAAKC,KAAO,KACZD,KAAKE,MAAQ,QAIfC,EAhBmB,WAiBrB,WAAYC,GAAK,oBACbJ,KAAKI,IAAMA,EACXJ,KAAKK,KAAO,IAAIN,EAAKK,EAAI,IAnBR,4CAwBrB,WAA2B,IAAlB3G,EAAiB,uDAAVuG,KAAKK,KAGjB,OAFAP,IACAjB,QAAQyB,IAAR,iBAAsB7G,EAAKwG,KAAKrG,MAAhC,oBAAiDH,EAAKyG,MAAMtG,QACzDH,EAAKwG,KAAKrG,MAAQH,EAAKyG,MAAMtG,OAC5BoG,KAAKO,SAAS9G,EAAKwG,MACnBD,KAAKO,SAAS9G,EAAKyG,OAKhB,CAAC,EAAE,IAFC,CAAC,EAAEJ,KAhCG,8BAqCrB,WAAmC,IAAlBrG,EAAiB,uDAAVuG,KAAKK,KAEP,IAAf5G,EAAKG,QACJoG,KAAKQ,iBAAiB/G,EAAKwG,MAE3BJ,EAAIY,KAAKhH,EAAKG,OACdoG,KAAKQ,iBAAiB/G,EAAKyG,UA3Cd,gCAiDrB,WAAqC,IAAlBzG,EAAiB,uDAAVuG,KAAKK,KACT,IAAf5G,EAAKG,QACJoG,KAAKU,kBAAkBjH,EAAKwG,MAC5BD,KAAKU,kBAAkBjH,EAAKyG,OAE5BL,EAAIY,KAAKhH,EAAKG,UAtDD,+BA0DrB,WAAoC,IAAlBH,EAAiB,uDAAVuG,KAAKK,KACR,IAAf5G,EAAKG,QAEJiG,EAAIY,KAAKhH,EAAKG,OACdoG,KAAKW,mBAAmBlH,EAAKwG,MAC7BD,KAAKW,mBAAmBlH,EAAKyG,UA/DhB,mBAoErB,WAAQ,IAAD,gBAGUF,KAAKI,IAAIlC,MAAM,IAHzB,IAGH,IAAI,EAAJ,qBAAgC,CAAC,IAAzBM,EAAwB,QAC5BoB,EAAMa,KAAK,IAAIV,EAAKvB,KAJrB,8BAOHoB,EAAK,CAAII,KAAKK,MAAT,mBAAkBT,IAEvBI,KAAKK,KAAKJ,KAAOL,EAAM,GACvBI,KAAKK,KAAKH,MAAQN,EAAM,GAExBF,EAAc,EACdC,EAAe,IAjFE,kBAqFrB,WAII,IADA,IAAIiB,EAAU,EACRjB,EAAaC,EAAMiB,QACrBjB,EAAMgB,GAASX,KAAOL,EAAMF,GAC5BE,EAAMgB,GAASV,MAAQN,EAAMD,GAC7BD,GAAe,EACfC,GAAgB,EAChBiB,QA9Fa,KAuGrBE,EAAO,IAAIX,EAFJY,OAAOC,OAAOC,IAAO9E,KAAI,SAAAqC,GAAC,OAAIA,EAAE5E,UAQ3C,OALAkH,EAAKI,QACLJ,EAAKK,OAELtC,QAAQyB,IAAIV,GAEL,IAAIwB,SAAQ,SAACC,GAChBC,YAAW,WACP,GAAIR,EAAKP,WAAY,GAAG,CACpB,OAAOd,GACH,KAAK,EACDZ,QAAQyB,IAAI,qBACZQ,EAAKN,mBACL,MACJ,KAAK,EACD3B,QAAQyB,IAAI,sBACZQ,EAAKJ,oBACL,MACJ,KAAK,EACD7B,QAAQyB,IAAI,uBACZQ,EAAKH,qBAIbU,EAAQ,CAAC,EAAExB,SAGXwB,EAAQ,CAAC,EAAGvB,MAEjB,S,ICrIIyB,EAAQ,I,kBCmBRC,GAfA,SAACxJ,GAGZ,OAAO,yBAASC,UAAWC,KAAQuJ,OAA5B,SACH,qBAAKxJ,UAAWC,KAAQwJ,W,mECGjBC,GATO,WAIlB,OAAQ,mCACA,sBAAKnD,EAAE,MAAMxF,EAAE,MAAMJ,MAAO,GAAIC,OAAQ,GAAIF,QAAQ,YAAYS,MAAO,CAACkC,KAAM,WAA9E,UAA0F,sBAAMA,KAAK,UAAUsG,SAAS,UAAUhG,EAAE,oaAAoaiG,SAAS,YAAY,sBAAMvG,KAAK,UAAUsG,SAAS,UAAUhG,EAAE,yQAAyQiG,SAAS,YAAY,sBAAMvG,KAAK,OAAOsG,SAAS,UAAUhG,EAAE,yKAAyKiG,SAAS,YAAY,sBAAMvG,KAAK,UAAUsG,SAAS,UAAUhG,EAAE,qJAAqJiG,SAAS,kBCE/yCC,GARS,WAGpB,OAAQ,mCAAE,sBAAKtD,EAAE,MAAMxF,EAAE,MAAMJ,MAAO,GAAIC,OAAQ,GAAIF,QAAQ,YAAYS,MAAO,CAACkC,KAAM,WAA9E,UAA0F,sBAAMA,KAAK,UAAUsG,SAAS,UAAUhG,EAAE,oaAAoaiG,SAAS,YAAY,sBAAMvG,KAAK,UAAUsG,SAAS,UAAUhG,EAAE,yQAAyQiG,SAAS,YAAY,sBAAMvG,KAAK,OAAOsG,SAAS,UAAUhG,EAAE,yKAAyKiG,SAAS,YAAY,sBAAMvG,KAAK,UAAUsG,SAAS,UAAUhG,EAAE,qJAAqJiG,SAAS,YAAY,sBAAMvG,KAAK,OAAOsG,SAAS,UAAUhG,EAAE,mCAAmCiG,SAAS,YAAY,sBAAMvG,KAAK,OAAOsG,SAAS,UAAUhG,EAAE,mCAAmCiG,SAAS,kBC2C/+CE,GA9CQ,WAEnB,OAAO,qBAAK1G,GAAG,SAASzC,MAAO,GAAIC,OAAQ,GAApC,SACP,mBAAGmC,UAAU,iDAAb,SACE,8BACE,4BACE,4BACE,4BACE,sBAAMY,EAAE,uQAAuQX,OAAO,OAAOK,KAAK,UAAUsG,SAAS,kBAI3T,4BACE,4BACE,4BACE,sBAAMhG,EAAE,6WAA6WX,OAAO,OAAOK,KAAK,UAAUsG,SAAS,kBAIja,4BACE,4BACE,4BACE,sBAAMhG,EAAE,4PAA4PX,OAAO,OAAOK,KAAK,UAAUsG,SAAS,kBAIhT,4BACE,4BACE,8BACE,4BACE,sBAAMhG,EAAE,gpCAAgpCX,OAAO,OAAOK,KAAK,UAAUsG,SAAS,cAEhsC,4BACE,sBAAMhG,EAAE,krBAAkrBX,OAAO,OAAOK,KAAK,UAAUsG,SAAS,6BC1BjuBI,GANQ,WAEnB,OAAO,sBAAKxD,EAAE,MAAMxF,EAAE,MAAMJ,MAAO,GAAIC,OAAQ,GAAIF,QAAQ,YAAYS,MAAO,CAACkC,KAAM,WAA9E,UAA0F,sBAAMA,KAAK,UAAUM,EAAE,qBAAqB,sBAAMN,KAAK,UAAUM,EAAE,8mBCQzJqG,GAVA,WACX,OAAO,qBAAK5G,GAAG,SAASzC,MAAO,IAAKC,OAAQ,IAArC,SACP,mBAAGmC,UAAU,oCAAb,SACE,mBAAGA,UAAU,4BAAb,SACE,sBAAMY,EAAE,4QAA4QX,OAAO,OAAOK,KAAK,cAAcsG,SAAS,mBCKhUM,GAAM,CAAC,CAACC,SAAS,IAAKC,SAAS,KAAM,CAACD,SAAS,MAAOC,SAAS,OAAQ,CAACD,SAAS,KAAMC,SAAS,MAAO,CAACD,SAAS,aAAcC,SAAS,OAiF/HC,GA9EA,WAIX,IAAMC,EAAeC,mBACrB,EAAgCpF,mBAAS,GAAzC,mBAAOqF,EAAP,KAAiBC,EAAjB,KACA,EAAoCtF,mBAAS,kGAA7C,mBAAOuF,EAAP,KAAmBC,EAAnB,KAuCA,OAnCAC,qBAAU,YACU,IAAbF,IACC7D,QAAQyB,IAAI,eACZuC,KAAKC,iBAAiB,IAAKC,MAC3BF,KAAKG,iBAAiBV,EAAaW,YAKzC,CAACP,IAGHE,qBAAU,WACN,OAAOJ,GACH,KAAK,EACD3D,QAAQyB,IAAI,KACZqC,EAAc,kGACd,MACJ,KAAK,EACD9D,QAAQyB,IAAI,OACZqC,GAAc,GACd,MACJ,KAAK,EACD9D,QAAQyB,IAAI,MACZqC,GAAc,GACd,MACJ,KAAK,EACD9D,QAAQyB,IAAI,cACZqC,GAAc,MAGxB,CAACH,IAIK,mCAEJ,sBAAKnH,GAAG,SAASpD,UAAWC,KAAQgL,OAApC,UAEA,sBAAKjL,UAAWC,KAAQiL,YAAxB,UACI,sBAAKlL,UAAWC,KAAQwJ,MAAxB,UACI,sBAAMzJ,UAAWC,KAAQkL,KAAMhK,MAAO,CAACiK,WAAwB,IAAXb,EAAe,oDAAsD,8CAA+CnK,QAAW,kBAAMoK,EAAY,IAArM,SAAyM,cAAC,GAAD,MACzM,sBAAMxK,UAAWC,KAAQkL,KAAMhK,MAAO,CAACiK,WAAwB,IAAXb,EAAe,oDAAsD,8CAA+CnK,QAAW,kBAAMoK,EAAY,IAArM,SAAyM,cAAC,GAAD,MACzM,sBAAMxK,UAAWC,KAAQkL,KAAMhK,MAAO,CAACiK,WAAwB,IAAXb,EAAe,oDAAsD,8CAA+CnK,QAAW,kBAAMoK,EAAY,IAArM,SAAyM,cAAC,GAAD,MACzM,sBAAMxK,UAAWC,KAAQkL,KAAMhK,MAAO,CAACiK,WAAwB,IAAXb,EAAe,oDAAsD,8CAA+CnK,QAAW,kBAAMoK,EAAY,IAArM,SAAyM,cAAC,GAAD,SAE7M,qBAAKxK,UAAWC,KAAQoL,KAAMjL,QAAS,WAAO8G,UAAUC,UAAUC,UAAUiD,EAAaW,QAAQ/D,YAAjG,SACI,cAAC,EAAD,UAKNwD,GAAc,sBAAKzK,UAAWC,KAAQqL,OAAxB,UAAgC,cAAC,GAAD,IAAhC,kBAAyDrB,GAAIM,GAAUL,SAAvE,UAEfO,GAAc,qBAAK7E,IAAKyE,EAAcrK,UAAS,0BAAqBC,KAAQsL,MAA9D,SACX,+BACKd,YC5DNzB,GAAO,CAChB,WAAY,CAAEwC,OAAQ,KAAM/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,MAAOC,MAAO,MAAOwD,MAAO,GAClF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAIqG,KAAM,MAAQC,MAAO,MAAOwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,OAAQC,MAAO,OAAQwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,OAAQC,MAAO,OAAQwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,OAAQC,MAAO,OAAQwD,MAAO,GACvF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,WAAY,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACnF,YAAa,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACpF,YAAa,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACpF,YAAa,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACpF,YAAa,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACpF,YAAa,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,KAAMwD,MAAO,GACpF,YAAa,CAAED,OAAQ,MAAO/J,MAAM,EAAME,MAAO,EAAGqG,KAAM,KAAMC,MAAO,OAGrEyD,GAAU,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAAa,YAAa,YAAa,YAAa,YAAa,aAU9WC,GAAqB,KA+KVC,GArKH,WAQV,MAAkC1G,mBAAS,QAA3C,mBAAOI,EAAP,KAAkBuG,EAAlB,KACA,EAA4C3G,mBAAS,IAArD,mBACA,GADA,UAC4CA,mBAAS,CAAC,EAAE,MAAxD,mBAAO4G,EAAP,KAAuBC,EAAvB,KACA,EAA4B7G,mBAAS,CAAC,EAAE,IAAxC,mBAAOtE,EAAP,KAAeoL,EAAf,KACA,EAA0B9G,mBAAS,GAAnC,mBAAc+G,GAAd,WACA,EAA8B/G,oBAAS,GAAvC,mBAAOmC,EAAP,KAAgB6E,EAAhB,KACMrG,EAAUyE,mBACZ6B,EAAc,CAAC,EAAE,GAChBxE,EAAQ,GACbf,QAAQyB,IAAI,MAWTsD,MAGa5E,SAASqF,cAAT,wBAAwCV,GAAQC,IAAhD,MACNxK,MAAMiK,WAAa,OAI7B,IAAMiB,EAAO,SAAPA,EAAQlI,EAAEmI,GACd,GAAGnI,EAAEmI,EAAE,CAEL,IAAMC,EAAOvD,GAAK0C,GAAQY,IAAI3K,MAC9BiF,QAAQyB,IAAI,OAAQkE,GACpBvD,GAAK0C,GAAQY,IAAI3K,MAASqH,GAAK0C,GAAQvH,IAAIxC,MAC3CqH,GAAK0C,GAAQvH,IAAIxC,MAAQ4K,EACzBF,EAAKlI,EAAE,EAAGmI,EAAE,KAKVE,EAAmB,WACvB/L,GAAe,KAEf,IAAI,IAAI0D,EAAE,EAAGA,EAAGvD,EAAOgI,OAASzE,GAAG,EACjCkI,EAAKlI,EAAG,EAAEA,EAAG,GAEfyC,QAAQyB,IAAIW,IACZiD,GAAS,SAAAlG,GAAS,OAAMA,MAMpBvD,EAAQ,WACZ,IAAIiK,EAAIf,GAAQS,EAAY,IACxBO,EAAIhB,GAAQS,EAAY,IAGxBvE,EAAM,CAAC6E,EAAGC,EAAG1D,GAAKyD,GAAGhL,KAAMuH,GAAK0D,GAAGjL,KAAMuH,GAAKyD,GAAG9K,MAAOqH,GAAK0D,GAAG/K,OAKpE,OAJAwK,EAAcA,EAAYjI,KAAI,SAAAqC,GAAC,OAAIA,EAAE,KACrCoB,GAAO,EAGAC,GAIH+E,EAAS,WACb/F,QAAQyB,IAAI,cACZ5H,GAAe,KACfuL,GAAU,SAAAjG,GAAS,4BAAQnF,GAAR,CAA2C,EAA3BA,EAAOgM,GAAGhM,EAAOgI,OAAO,QAC3DuD,EAAc,CAAC,EAAE,IAKbU,EAAkB,WACtBpM,GAAe,KAEf,IADA,IAAIqM,EAAuB,SAAZxH,EAAqB,OAAS,OACrCnB,EAAE,EAAGA,EAAEwD,EAAOxD,IAChB6E,GAAK0C,GAAQvH,IAAIxC,QACnBqH,GAAK0C,GAAQvH,IAAI1C,MAAO,GAG5BoK,EAAaiB,IAMTjL,EAAqB,SAACkL,GAE1B,IAAIxG,EAAIwG,EAAMC,OAEdhE,GAAKzC,EAAE0G,QAAQ7J,IAAIzB,MAAQoL,EAAMC,OAAOrL,OAKpCuL,EAAkB,uCAAG,WAAM1F,GAAN,eAAAiF,EAAA,6DAEzBhM,GAAe,KACfyL,GAAW,GAHc,SAIT3E,EAAKC,GAJI,OAIrBI,EAJqB,OAKzBhB,QAAQyB,IAAI,UACRT,EAAI,IAcNsE,GAAW,GAEXtE,EAAI,GAAKA,EAAI,GAAGuF,WAChBpB,EAAkBnE,KAhBlBsE,GAAW,GACXH,EAAkB,CAAC,EAAG,gCACtBJ,GAAqB/D,EAAI,GAAG,EAE5BhB,QAAQyB,IAAIqD,GAAQC,KACN5E,SAASqF,cAAT,wBAAwCV,GAAQC,IAAhD,MAENyB,UAAUC,IAAI,cAdC,2CAAH,sDA4BlB5M,EAAgB,SAAC6M,GACrBzH,EAAQmF,QAAQ7J,MAAM4B,UAAtB,qBAAgDuK,EAAhD,MACA1G,QAAQyB,IAAIiF,EAAW,WAAa,YAOtC,OACE,qCACE,cAAC,EAAD,CAAQ7M,cAAeA,EAAekM,OAAQA,EAAQE,gBAAiBA,EAAiBvH,UAAWA,EAAWkH,iBAAkBA,IAEhI,cAAC,EAAD,CAAW3G,QAASA,EAAS0H,SAvJpB,MAuJwCjI,UAAWA,EAAYqH,OAAQA,EAAQtH,QAAS,CAACsH,EAAO,WAAOO,EAAmB,IAAI,WAAOA,EAAmB,IAAI,WAAOA,EAAmB,IAAKV,EAAkBK,KAEtN,cAAC,EAAD,CAAa7H,QAAS8G,EAAgBzE,QAASA,IAC/C,eAAC,EAAD,WACE,cAAC,EAAD,CAASrC,QAAS,kIAEjBpE,EAAOsD,KAAI,SAAAqC,GAAC,OAAI,qCAAE,cAAC,EAAD,CAAS1B,UAAWmE,GAAK,YAAYrH,MAAOa,MAAOA,EAAOX,mBAAoBA,EAA8CiC,MAAOyC,EAAGzB,OArKpJ,YAqKmI,IAAdN,KAAKC,UAA2C,cAAC,EAAD,CAAcX,MAAOyC,EAAGvC,MAAOpD,EAAOgM,GAAGhM,EAAOgI,OAAO,cAEnO,cAAC,GAAD,IAEA,cAAC,GAAD,QCnON4E,IAASC,OAAO,cAAC,GAAD,IAAS1G,SAASC,eAAe,W","file":"static/js/main.da035816.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__1g6UU\",\"languageBar\":\"Editor_languageBar__2Rzo5\",\"icons\":\"Editor_icons__2yGTR\",\"locked\":\"Editor_locked__Ao47L\",\"icon\":\"Editor_icon__2lWl5\",\"copy\":\"Editor_copy__10r7b\",\"edit\":\"Editor_edit__3qD_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__CkP5_\",\"dashboardControls\":\"Dashboard_dashboardControls__q3GFj\",\"header\":\"Dashboard_header__3iZPt\",\"utilites\":\"Dashboard_utilites__2y0wA\",\"utility\":\"Dashboard_utility__1Y2pN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pair\":\"TreeNodePair_pair__32SNv\",\"singlenode\":\"TreeNodePair_singlenode__2DZl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"console\":\"UserConsole_console__1jMjw\",\"consoleHolder\":\"UserConsole_consoleHolder__2kDMC\",\"consoleHeader\":\"UserConsole_consoleHeader__2de3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1FEEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TreeRow_row__1IxJF\",\"firstrow\":\"TreeRow_firstrow__1pzc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__qMrbq\",\"icons\":\"Footer_icons__K9jIx\",\"icon\":\"Footer_icon__3i1Si\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3W9WG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stripe\":\"MenuIcon_stripe__3KZeF\",\"holder\":\"MenuIcon_holder__30WMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treeparentbody\":\"TreeParentBody_treeparentbody__3ilh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"TreeNode_node__YOO_3\",\"hidden\":\"TreeNode_hidden__E0Wok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandwich\":\"TreeSandwich_sandwich__2WhoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2-eXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__pUu67\",\"spin\":\"Spinner_spin__2QYKg\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\n\r\nconst Button  = (props) => {\r\n\r\n\r\n\r\n    return(\r\n    \r\n        <button className={`${props.className || ''} ${classes.button}`} type={props.type} onClick={props.onClick}>{props.children}</button>\r\n\r\n        );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './MenuIcon.module.css'\r\n\r\n\r\nconst MenuIcon = (props) => {\r\n    \r\n    let initWidth = -100;\r\n\r\n    let clicked = () => {\r\n        initWidth = !initWidth ? -100 : 0;\r\n        // console.log(\"Here\");\r\n        props.expandSidebar(initWidth);\r\n        \r\n    }\r\n    \r\n    return (\r\n        // <button>\r\n            <div className={classes.holder} onClick={clicked}>\r\n                {/* <div className={classes.stripe}></div>\r\n                <div className={classes.stripe}></div>\r\n                <div className={classes.stripe}></div> */}\r\n                <svg viewBox=\"0 0 100 80\" width=\"40\" height=\"40\">\r\n                    <rect width=\"100\" height=\"18\" rx=\"10\" ry=\"10\"></rect>\r\n                    <rect y=\"30\" width=\"100\" height=\"18\" rx=\"10\" ry=\"10\"></rect>\r\n                    <rect y=\"60\" width=\"100\" height=\"18\" rx=\"10\" ry=\"10\"></rect>\r\n                </svg>\r\n\r\n        \r\n               \r\n\r\n            </div>\r\n        // {/* </button> */}\r\n    )\r\n\r\n}\r\n\r\nexport default MenuIcon;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport Button from './Button';\r\nimport MenuIcon from '../Icons/MenuIcon';\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className={classes.navbar}>\r\n            {/* <span  onClick={expandSidebar}><MenuIcon/></span> */}\r\n            <MenuIcon expandSidebar={props.expandSidebar}/>\r\n                <span className={classes.header}>Broccoli <small style={{fontSize:'0.7em'}}>by Unamed Inc</small></span>\r\n            {/* <Button type=\"button\" onClick={props.addRow}>Add new row</Button>\r\n            <Button type=\"button\" onClick={props.toggleNullState}>{props.nullState} Empty Nodes</Button>\r\n            <Button type=\"button\" onClick={props.invertBinaryTree}>Invert Binary Tree</Button> */}\r\n            </div>\r\n            \r\n        \r\n        </>\r\n    \r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './TreeParentBody.module.css';\r\n\r\nconst TreeParentBody = (props) => {\r\n\r\n   \r\n    \r\n      \r\n\r\n       \r\n\r\n    return(\r\n\r\n        <section className={`${classes.treeparentbody} ${props.className}`}>{props.children}</section>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default TreeParentBody;","import React from 'react';\r\nimport classes from './TreeNode.module.css'\r\n\r\nconst TreeNode = (props) => {\r\n\r\n\r\n    // console.log(props.show);\r\n\r\n\r\n\r\n    // return (<input className={classes.node} placeholder={props.value} type=\"number\"></input>);\r\n    return (<input className={`${classes.node} ${!props.show ? 'hidden' : ''}`} placeholder={props.value || ''} type=\"number\" onChange={props.inputChangeHandler} data-id={props.identifier} style={{visibility: !props.show ? 'hidden' : 'visible'}}></input>);\r\n}\r\n\r\nexport default TreeNode;","import React from 'react';\r\nimport classes from './TreeNodePair.module.css';\r\nimport TreeNode from './TreeNode';\r\n\r\nconst TreeNodePair = (props) => {\r\n\r\n    // const nodeSlant = props.type;\r\n    // let slantSide;\r\n    // if(nodeSlant){\r\n    //     if(nodeSlant == 2){\r\n    //         slantSide = \"\";\r\n    //     }else if{nodeSlant == 1}{\r\n    //         slantSide = \"\";\r\n    //     }\r\n    // }\r\n\r\n    let result,id1,id2,show1,show2,value1,value2;\r\n    // id1='nodeleft';\r\n    // id2='noderight';\r\n    result = props.setId();\r\n    id1 = result[0];\r\n    id2 = result[1];\r\n    show1 = result[2];\r\n    show2 = result[3];\r\n    value1 = result[4];\r\n    value2 = result[5];\r\n\r\n    // console.log(show1, show2);\r\n    // console.log('id1, id2 : ',id1, id2);\r\n\r\n    return (\r\n        <div className={classes.pair} style={{width:`${props.pairwidth}%`, justifyContent: ``}}>\r\n            <TreeNode inputChangeHandler={props.inputChangeHandler} value={value1} identifier={id1} show={show1}></TreeNode>\r\n            <TreeNode inputChangeHandler={props.inputChangeHandler} value={value2} identifier={id2} show={show2}></TreeNode>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default TreeNodePair;","import React from 'react';\r\nimport './Line.css';\r\n\r\nconst Line = (props) => {\r\n\r\n    const width = !(props.exceptRoot) ? (props.width/2) : props.width;\r\n    const inclination = (props.width/2)-10;\r\n\r\n    return(\r\n\r\n        // <div className=\"--arrow-holder\" style={{width: `${width}%`}}> \r\n        //     <svg style={{transform:`rotate(${inclination}deg)`, stroke:'black'}} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"28px\" height=\"150px\" viewBox=\"0 0 9 47\" version=\"1.1\">\r\n        //     <g id=\"surface1\">\r\n        //     <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'black', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -0.754961 -95.123573 L 0.754947 95.923632 \" transform=\"matrix(0.248359,0,0,0.244459,4.312502,23.402209)\"></path>\r\n        //     <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'black', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -9.05946 12.834643 L 9.059437 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,6.750003,43.518712)\"></path>\r\n        //     <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'black', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M 9.059445 12.834643 L -9.059451 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,2.250001,43.518712)\"></path>\r\n        //     </g>\r\n        //     </svg>\r\n\r\n        //     <svg style={{transform:`rotate(-${inclination}deg)`, stroke:'black'}} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"28px\" height=\"150px\" viewBox=\"0 0 9 47\" version=\"1.1\">\r\n        //     <g id=\"surface1\">\r\n        //     <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'black', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -0.754961 -95.123573 L 0.754947 95.923632 \" transform=\"matrix(0.248359,0,0,0.244459,4.312502,23.402209)\"></path>\r\n        //     <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'black', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -9.05946 12.834643 L 9.059437 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,6.750003,43.518712)\"></path>\r\n        //     <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'black', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M 9.059445 12.834643 L -9.059451 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,2.250001,43.518712)\"></path>\r\n        //     </g>\r\n        //     </svg>\r\n        // </div>\r\n        <div className=\"--arrow-holder\" style={{width: `${width}%`}}> \r\n            <svg style={{transform:`rotate(${inclination}deg)`, stroke:'white'}} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"28px\" height=\"150px\" viewBox=\"0 0 9 47\" version=\"1.1\">\r\n            <g id=\"surface1\">\r\n            <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'white', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -0.754961 -95.123573 L 0.754947 95.923632 \" transform=\"matrix(0.248359,0,0,0.244459,4.312502,23.402209)\"></path>\r\n            <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'white', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -9.05946 12.834643 L 9.059437 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,6.750003,43.518712)\"></path>\r\n            <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'white', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M 9.059445 12.834643 L -9.059451 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,2.250001,43.518712)\"></path>\r\n            </g>\r\n            </svg>\r\n\r\n            <svg style={{transform:`rotate(-${inclination}deg)`, stroke:'white'}} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"28px\" height=\"150px\" viewBox=\"0 0 9 47\" version=\"1.1\">\r\n            <g id=\"surface1\">\r\n            <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'white', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -0.754961 -95.123573 L 0.754947 95.923632 \" transform=\"matrix(0.248359,0,0,0.244459,4.312502,23.402209)\"></path>\r\n            <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'white', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M -9.05946 12.834643 L 9.059437 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,6.750003,43.518712)\"></path>\r\n            <path style={{fill: 'none', strokeWidth: 3, strokeLinecap: 'butt', strokeLinejoin: 'miter', stroke: 'white', strokeOpacity: 1, strokeMiterlimit: 4}} d=\"M 9.059445 12.834643 L -9.059451 -12.827937 \" transform=\"matrix(0.248359,0,0,0.244459,2.250001,43.518712)\"></path>\r\n            </g>\r\n            </svg>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n    \r\n}\r\n\r\nexport default Line;\r\n","import React from 'react';\r\nimport classes from './TreeSandwich.module.css';\r\nimport Line from './Line';\r\n\r\nconst TreeSandwich = (props) => {\r\n\r\n\r\n    const arrows = (props.exceptRoot) ? 1 : (props.pairs)*2;\r\n\r\n    // const arrows = (props.pairs)*2;\r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className={classes.sandwich}>\r\n            {props.endif !== props.pairs && [...Array(arrows)].map((i,e) => <Line width={100/props.pairs} exceptRoot={props.exceptRoot}></Line>)}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TreeSandwich;","import React from 'react';\r\nimport classes from './TreeRow.module.css';\r\nimport classes1 from './TreeNodePair.module.css';\r\nimport TreeNodePair from './TreeNodePair';\r\nimport TreeNode from './TreeNode';\r\n// import Line from './Line';\r\nimport TreeSandwich from './TreeSandwich';\r\n\r\nconst TreeRow = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div className={classes.row}>\r\n            {props.pairs>0 && [...Array(props.pairs)].map((i,ind) => <TreeNodePair  key={Math.random(1,100)} pairwidth={100/props.pairs} inputChangeHandler={props.inputChangeHandler} setId={props.setId}/>)}\r\n            {!props.pairs && <div className={classes.firstrow}><div className={classes1.singlenode}><TreeNode value={props.rootValue} inputChangeHandler={props.inputChangeHandler} identifier={props.rootId} show={true}></TreeNode></div><TreeSandwich endif={0} pairs={1} exceptRoot={1}/></div>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TreeRow;","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className = {classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;\r\n\r\n","import React, {useState} from 'react';\r\nimport classes from './Dashboard.module.css';\r\nimport Button from './Button';\r\n\r\n\r\n\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const [dashboardButtons, setDashboardButtons] = useState([{text:'Add a new row',  action: props.actions[0]}, \r\n    {text:'Inorder Traversal', action: props.actions[1]},\r\n    {text:'Preorder Traversal', action: props.actions[2]},\r\n    {text:'Postorder Traversal', action: props.actions[3]},\r\n    {text:'Invert Binary Tree', action: props.actions[4]}, \r\n    {text:`${props.nullState} Empty Nodes`,action: props.actions[5]}]); \r\n\r\n    const [dynamicButtonOrdering, setDynamicButtonOrdering] = useState(true);\r\n\r\n\r\n\r\n    return (\r\n        <section className={classes.dashboard} ref={props.dashRef}>\r\n          {/* style={{transform: props.expanded ? 'translateX(0%)' : 'translateX(-100%)'}}>  */}\r\n            <span className={classes.header}>DASHBOARD</span>\r\n            <div className={classes.dashboardControls}>\r\n\r\n                {/* <Button type=\"button\" onClick={props.addRow}>Add a new row</Button>\r\n                <Button type=\"button\" onClick={props.toggleNullState}>{props.nullState} Empty Nodes</Button>\r\n                <Button type=\"button\" onClick={props.invertBinaryTree}>Invert Binary Tree</Button>\r\n                \r\n\r\n               <Button type=\"button\" onClick={() => {props.treeActionFunction(1)}}>Inorder Traversal</Button>\r\n               <Button type=\"button\" onClick={() => {props.treeActionFunction(2)}}>Preorder Traversal</Button>\r\n               <Button type=\"button\" onClick={() => {props.treeActionFunction(3)}}>Postorder Traversal</Button>\r\n                 */}\r\n                \r\n                <Button type=\"button\" onClick={props.actions[0]}>Add a new row</Button>\r\n\r\n                {[...Array(6)].map((i, ind) => <Button type=\"button\" onClick={() => {\r\n                    // Reorder Array\r\n                    dashboardButtons[ind].action();\r\n                    if(dynamicButtonOrdering){\r\n                        setDashboardButtons(prevState => {\r\n                            if(ind > 0){\r\n                                return [prevState[ind]].concat(prevState.slice(0,ind)).concat(prevState.slice(ind+1,));\r\n                            }else{\r\n                                return prevState;\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n                }} key={ind}> {dashboardButtons[ind].text} </Button>)}\r\n\r\n\r\n                <div className={classes.utilites}>\r\n                   <div className={classes.utility}>\r\n                        Dynamic Button ordering \r\n                        <input type=\"checkbox\" checked={dynamicButtonOrdering} onChange={() => {setDynamicButtonOrdering(prevState => prevState ? false : true)}}></input></div>\r\n                    \r\n                </div>\r\n\r\n\r\n                {/* <Button type=\"button\" onClick={props.toggleNullState}>{props.nullState} Empty Nodes</Button> */}\r\n\r\n                \r\n                {/* <span><a>Instagram</a></span> */}\r\n\r\n            \r\n                \r\n            \r\n            </div>\r\n            \r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <a href=\"#userConsole\"><Button type=\"button\" onClick={() => {props.treeActionFunction(1)}}>Inorder Traversal</Button></a>\r\n<a href=\"#userConsole\"><Button type=\"button\" onClick={() => {props.treeActionFunction(2)}}>Preorder Traversal</Button></a>\r\n<a href=\"#userConsole\"><Button type=\"button\" onClick={() => {props.treeActionFunction(3)}}>Postorder Traversal</Button></a>\r\n*/}\r\n\r\n\r\n\r\n{/* <Button type=\"button\" onClick={props.addRow}>Add a new row</Button>\r\n<Button type=\"button\" onClick={props.toggleNullState}>{props.nullState} Empty Nodes</Button>\r\n<Button type=\"button\" onClick={props.invertBinaryTree}>Invert Binary Tree</Button>\r\n<Button type=\"button\" onClick={props.addRow}>Add a new row</Button>\r\n<Button type=\"button\" onClick={props.toggleNullState}>{props.nullState} Empty Nodes</Button>\r\n<Button type=\"button\" onClick={props.invertBinaryTree}>Invert Binary Tree</Button> */}","import React from 'react';\r\n\r\n\r\nconst Copy = () => {\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={18} height={18} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-7 h-7\" title=\"Copy To Clipboard\" aria-hidden=\"true\"><rect x={9} y={9} width={13} height={13} rx={2} ry={2} /><path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" /></svg>    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Copy;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n    return(<div className={classes.spinner}></div>)\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport classes from './UserConsole.module.css';\r\nimport Copy from '../Icons/Copy';\r\nimport Spinner from './Spinner';\r\n\r\n\r\nconst UserConsole = (props) => {\r\n    \r\n    const copyToClipboard = () => {\r\n        let text = document.getElementById(\"results\").innerText;\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className= {classes.consoleHolder} id={\"userConsole\"}>\r\n                <div className={classes.console}>\r\n                    <div className={classes.consoleHeader}><h3 style={{fontWeight : 'bold'}}>Console : </h3>{!props.message[0] || <button onClick={copyToClipboard}><Copy/></button>}</div>\r\n                    {props.loading ?  (<Spinner/>) : <pre id={\"results\"} style={{color: !props.message[0] ? 'red' : 'white'}}>{props.message[1]}</pre>}\r\n                    \r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserConsole;","import {tree} from \"../App\";\r\n\r\nexport const func = (opt) => {\r\n    \r\n    let  nodeLeftPos, nodeRightPos, nodes = [];\r\n    let res = [];\r\n    let count = 0;\r\n    \r\n\r\n\r\n    class Node{\r\n        constructor(value){\r\n            this.value = value;\r\n            this.left = null;\r\n            this.right = null;\r\n        }\r\n    }\r\n    \r\n    class BinarySearchTree{\r\n        constructor(arr){\r\n            this.arr = arr;\r\n            this.root = new Node(arr[0]);\r\n    \r\n        \r\n        }\r\n    \r\n        Validate(node = this.root){\r\n            count++;\r\n            console.log(`Left : ${node.left.value} Right : ${node.right.value}`);\r\n            if(node.left.value < node.right.value){\r\n                this.Validate(node.left);\r\n                this.Validate(node.right);\r\n                \r\n            }else{\r\n                return [0,count];\r\n            }\r\n            return [1,1];\r\n        }\r\n\r\n        InorderTraversal(node = this.root){\r\n            \r\n            if(node.value !== 0){\r\n                this.InorderTraversal(node.left);\r\n                // console.log(node.value);\r\n                res.push(node.value);\r\n                this.InorderTraversal(node.right);\r\n            }\r\n    \r\n            \r\n        }\r\n\r\n        PostorderTraversal(node = this.root){\r\n            if(node.value !== 0){\r\n                this.PreorderTraversal(node.left);\r\n                this.PreorderTraversal(node.right);\r\n                // console.log(node.value);\r\n                res.push(node.value);\r\n            }\r\n        }\r\n\r\n        PreorderTraversal(node = this.root){\r\n            if(node.value !== 0){\r\n                // console.log(node.value);\r\n                res.push(node.value);\r\n                this.PostorderTraversal(node.left);\r\n                this.PostorderTraversal(node.right);\r\n            }\r\n        }\r\n    \r\n    \r\n        start(){\r\n            \r\n            \r\n            for(let x of this.arr.slice(1,)){\r\n                nodes.push(new Node(x));\r\n            }\r\n    \r\n            nodes = [this.root, ...nodes];\r\n    \r\n            this.root.left = nodes[1];\r\n            this.root.right = nodes[2];\r\n    \r\n            nodeLeftPos = 3;\r\n            nodeRightPos = 4;\r\n    \r\n        }\r\n    \r\n        init(){\r\n    \r\n    \r\n            let counter = 1;\r\n            while(nodeRightPos<nodes.length){\r\n                nodes[counter].left = nodes[nodeLeftPos];\r\n                nodes[counter].right = nodes[nodeRightPos];\r\n                nodeLeftPos += 2;\r\n                nodeRightPos += 2;\r\n                counter++;\r\n            }\r\n    \r\n            \r\n            \r\n        }\r\n    }\r\n    let ele = (Object.values(tree)).map(x => x.value);\r\n    \r\n    let Tree = new BinarySearchTree(ele);\r\n    Tree.start();\r\n    Tree.init();\r\n    \r\n    console.log(nodes);\r\n    \r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            if((Tree.Validate())[0]){\r\n                switch(opt){\r\n                    case 1:\r\n                        console.log(\"Inorder Traversal\");\r\n                        Tree.InorderTraversal();\r\n                        break;\r\n                    case 2:\r\n                        console.log(\"Preorder Traversal\");\r\n                        Tree.PreorderTraversal();\r\n                        break;\r\n                    case 3:\r\n                        console.log(\"Postorder Traversal\");\r\n                        Tree.PostorderTraversal();\r\n                        break;\r\n                }\r\n    \r\n                resolve([1,res]);\r\n    \r\n            }else{\r\n                resolve([0, count]);\r\n            }\r\n        }, 200);\r\n    })\r\n\r\n    \r\n        // return new Promise((resolve) => {\r\n        //     if((Tree.Validate())[0]){\r\n        //         switch(opt){\r\n        //             case 1:\r\n        //                 console.log(\"Inorder Traversal\");\r\n        //                 Tree.InorderTraversal();\r\n        //                 break;\r\n        //             case 2:\r\n        //                 console.log(\"Preorder Traversal\");\r\n        //                 Tree.PreorderTraversal();\r\n        //                 break;\r\n        //             case 3:\r\n        //                 console.log(\"Postorder Traversal\");\r\n        //                 Tree.PostorderTraversal();\r\n        //                 break;\r\n        //         }\r\n\r\n        //         resolve([1,res]);\r\n\r\n        //     }else{\r\n        //         resolve([0, count]);\r\n        //     }\r\n        // });\r\n    \r\n\r\n\r\n}\r\n\r\n","import {tree} from '../App';\r\nconst helper = require('./CGenerator.json');\r\n\r\n\r\nexport const CDriverCode = () => {\r\n\r\n    let resultantDriver = '';\r\n    // console.log(helper[0].header);\r\n    // console.log(helper[0].structure);\r\n    \r\n\r\n}","import React from 'react';\r\nimport InstagramIcon from '../Icons/InstagramIcon';\r\nimport classes from './Footer.module.css';\r\n\r\n\r\nconst Footer = (props) => {\r\n\r\n\r\n    return(<section className={classes.footer}>\r\n        <div className={classes.icons}>\r\n            {/* <a href=\"https://www.instagram.com/depth_exceeded/\" className={classes.icon}><InstagramIcon/></a> */}\r\n        </div>\r\n\r\n    </section>)\r\n\r\n\r\n    \r\n}\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n\r\nconst CLanguageIcon = () => {\r\n\r\n\r\n\r\n    return (<>\r\n            <svg x=\"0px\" y=\"0px\" width={48} height={48} viewBox=\"0 0 48 48\" style={{fill: '#000000'}}><path fill=\"#283593\" fillRule=\"evenodd\" d=\"M22.903,3.286c0.679-0.381,1.515-0.381,2.193,0 c3.355,1.883,13.451,7.551,16.807,9.434C42.582,13.1,43,13.804,43,14.566c0,3.766,0,15.101,0,18.867 c0,0.762-0.418,1.466-1.097,1.847c-3.355,1.883-13.451,7.551-16.807,9.434c-0.679,0.381-1.515,0.381-2.193,0 c-3.355-1.883-13.451-7.551-16.807-9.434C5.418,34.899,5,34.196,5,33.434c0-3.766,0-15.101,0-18.867 c0-0.762,0.418-1.466,1.097-1.847C9.451,10.837,19.549,5.169,22.903,3.286z\" clipRule=\"evenodd\" /><path fill=\"#5c6bc0\" fillRule=\"evenodd\" d=\"M5.304,34.404C5.038,34.048,5,33.71,5,33.255 c0-3.744,0-15.014,0-18.759c0-0.758,0.417-1.458,1.094-1.836c3.343-1.872,13.405-7.507,16.748-9.38 c0.677-0.379,1.594-0.371,2.271,0.008c3.343,1.872,13.371,7.459,16.714,9.331c0.27,0.152,0.476,0.335,0.66,0.576L5.304,34.404z\" clipRule=\"evenodd\" /><path fill=\"#fff\" fillRule=\"evenodd\" d=\"M24,10c7.727,0,14,6.273,14,14s-6.273,14-14,14 s-14-6.273-14-14S16.273,10,24,10z M24,17c3.863,0,7,3.136,7,7c0,3.863-3.137,7-7,7s-7-3.137-7-7C17,20.136,20.136,17,24,17z\" clipRule=\"evenodd\" /><path fill=\"#3949ab\" fillRule=\"evenodd\" d=\"M42.485,13.205c0.516,0.483,0.506,1.211,0.506,1.784 c0,3.795-0.032,14.589,0.009,18.384c0.004,0.396-0.127,0.813-0.323,1.127L23.593,24L42.485,13.205z\" clipRule=\"evenodd\" /></svg>\r\n              </>)\r\n}\r\n\r\nexport default CLanguageIcon","import React from 'react';\r\n\r\nconst CPPLanguageIcon = () => {\r\n\r\n\r\n    return (<><svg x=\"0px\" y=\"0px\" width={48} height={48} viewBox=\"0 0 48 48\" style={{fill: '#000000'}}><path fill=\"#00549d\" fillRule=\"evenodd\" d=\"M22.903,3.286c0.679-0.381,1.515-0.381,2.193,0 c3.355,1.883,13.451,7.551,16.807,9.434C42.582,13.1,43,13.804,43,14.566c0,3.766,0,15.101,0,18.867 c0,0.762-0.418,1.466-1.097,1.847c-3.355,1.883-13.451,7.551-16.807,9.434c-0.679,0.381-1.515,0.381-2.193,0 c-3.355-1.883-13.451-7.551-16.807-9.434C5.418,34.899,5,34.196,5,33.434c0-3.766,0-15.101,0-18.867 c0-0.762,0.418-1.466,1.097-1.847C9.451,10.837,19.549,5.169,22.903,3.286z\" clipRule=\"evenodd\" /><path fill=\"#0086d4\" fillRule=\"evenodd\" d=\"M5.304,34.404C5.038,34.048,5,33.71,5,33.255 c0-3.744,0-15.014,0-18.759c0-0.758,0.417-1.458,1.094-1.836c3.343-1.872,13.405-7.507,16.748-9.38 c0.677-0.379,1.594-0.371,2.271,0.008c3.343,1.872,13.371,7.459,16.714,9.331c0.27,0.152,0.476,0.335,0.66,0.576L5.304,34.404z\" clipRule=\"evenodd\" /><path fill=\"#fff\" fillRule=\"evenodd\" d=\"M24,10c7.727,0,14,6.273,14,14s-6.273,14-14,14 s-14-6.273-14-14S16.273,10,24,10z M24,17c3.863,0,7,3.136,7,7c0,3.863-3.137,7-7,7s-7-3.137-7-7C17,20.136,20.136,17,24,17z\" clipRule=\"evenodd\" /><path fill=\"#0075c0\" fillRule=\"evenodd\" d=\"M42.485,13.205c0.516,0.483,0.506,1.211,0.506,1.784 c0,3.795-0.032,14.589,0.009,18.384c0.004,0.396-0.127,0.813-0.323,1.127L23.593,24L42.485,13.205z\" clipRule=\"evenodd\" /><path fill=\"#fff\" fillRule=\"evenodd\" d=\"M31 21H33V27H31zM38 21H40V27H38z\" clipRule=\"evenodd\" /><path fill=\"#fff\" fillRule=\"evenodd\" d=\"M29 23H35V25H29zM36 23H42V25H36z\" clipRule=\"evenodd\" /></svg></>)\r\n\r\n}\r\n\r\n\r\nexport default CPPLanguageIcon;","import React from 'react';\r\n\r\nconst GoLanguageIcon = () => {\r\n\r\n    return(<svg id=\"body_1\" width={80} height={80}>\r\n    <g transform=\"matrix(0.31434184 0 0 0.31434184 -0 4.6365423)\">\r\n      <g>\r\n        <g>\r\n          <g>\r\n            <g>\r\n              <path d=\"M40.2 101.1C 39.8 101.1 39.7 100.9 39.9 100.6L39.9 100.6L42 97.9C 42.2 97.6 42.7 97.4 43.1 97.4L43.1 97.4L78.8 97.4C 79.200005 97.4 79.3 97.700005 79.100006 98L79.100006 98L77.40001 100.6C 77.20001 100.9 76.70001 101.2 76.40001 101.2L76.40001 101.2L40.2 101.1z\" stroke=\"none\" fill=\"#00ACD7\" fillRule=\"nonzero\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <g>\r\n          <g>\r\n            <g>\r\n              <path d=\"M25.1 110.3C 24.7 110.3 24.6 110.100006 24.800001 109.8L24.800001 109.8L26.900002 107.100006C 27.100002 106.8 27.600002 106.600006 28.000002 106.600006L28.000002 106.600006L73.6 106.600006C 74 106.600006 74.2 106.90001 74.1 107.200005L74.1 107.200005L73.299995 109.600006C 73.2 110.00001 72.799995 110.200005 72.399994 110.200005L72.399994 110.200005L25.1 110.3z\" stroke=\"none\" fill=\"#00ACD7\" fillRule=\"nonzero\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <g>\r\n          <g>\r\n            <g>\r\n              <path d=\"M49.3 119.5C 48.899998 119.5 48.8 119.2 49 118.9L49 118.9L50.4 116.4C 50.600002 116.1 51 115.8 51.4 115.8L51.4 115.8L71.4 115.8C 71.8 115.8 72 116.100006 72 116.5L72 116.5L71.8 118.9C 71.8 119.3 71.4 119.6 71.100006 119.6L71.100006 119.6L49.3 119.5z\" stroke=\"none\" fill=\"#00ACD7\" fillRule=\"nonzero\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <g>\r\n          <g>\r\n            <g>\r\n              <g>\r\n                <path d=\"M153.1 99.3C 146.8 100.9 142.5 102.100006 136.3 103.700005C 134.8 104.100006 134.7 104.200005 133.40001 102.700005C 131.90001 101.00001 130.8 99.9 128.70001 98.9C 122.40001 95.8 116.30001 96.700005 110.60001 100.4C 103.80001 104.8 100.30001 111.3 100.40002 119.4C 100.500015 127.4 106.000015 134 113.90002 135.1C 120.70002 136 126.40002 133.6 130.90002 128.5C 131.80002 127.4 132.60002 126.2 133.60002 124.8C 130.00002 124.8 125.50002 124.8 114.30002 124.8C 112.20002 124.8 111.70002 123.5 112.40002 121.8C 113.70002 118.700005 116.10001 113.5 117.500015 110.9C 117.80002 110.3 118.500015 109.3 120.000015 109.3C 125.10001 109.3 143.90001 109.3 156.40002 109.3C 156.20003 112 156.20003 114.700005 155.80002 117.4C 154.70001 124.6 152.00002 131.2 147.60002 137C 140.40002 146.5 131.00002 152.4 119.10002 154C 109.30002 155.3 100.20002 153.4 92.20002 147.4C 84.80002 141.79999 80.60002 134.4 79.50002 125.2C 78.20002 114.299995 81.400024 104.5 88.00002 95.899994C 95.10002 86.59999 104.50002 80.7 116.00002 78.59999C 125.400024 76.899994 134.40002 77.99999 142.50003 83.49999C 147.80003 86.99999 151.60004 91.799995 154.10004 97.59999C 154.7 98.5 154.3 99 153.1 99.3z\" stroke=\"none\" fill=\"#00ACD7\" fillRule=\"nonzero\" />\r\n              </g>\r\n              <g>\r\n                <path d=\"M186.2 154.6C 177.09999 154.40001 168.8 151.8 161.8 145.8C 155.90001 140.7 152.2 134.2 151 126.5C 149.2 115.2 152.3 105.2 159.1 96.3C 166.40001 86.700005 175.20001 81.700005 187.1 79.600006C 197.3 77.8 206.90001 78.8 215.6 84.700005C 223.5 90.100006 228.40001 97.4 229.70001 107C 231.40001 120.5 227.50002 131.5 218.20001 140.9C 211.6 147.59999 203.50002 151.79999 194.20001 153.7C 191.5 154.2 188.8 154.3 186.2 154.6zM210 114.2C 209.9 112.899994 209.9 111.899994 209.7 110.899994C 207.9 100.99999 198.8 95.399994 189.3 97.59999C 180 99.69999 174 105.59999 171.8 114.99999C 170 122.799995 173.8 130.7 181 133.9C 186.5 136.29999 192 136 197.3 133.29999C 205.2 129.2 209.5 122.8 210 114.2z\" stroke=\"none\" fill=\"#00ACD7\" fillRule=\"nonzero\" />\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>)\r\n\r\n\r\n\r\n}\r\n\r\nexport default GoLanguageIcon;","import React from 'react';\r\n\r\n\r\nconst JSLanguageIcon = () => {\r\n    \r\n    return(<svg x=\"0px\" y=\"0px\" width={48} height={48} viewBox=\"0 0 48 48\" style={{fill: '#000000'}}><path fill=\"#ffd600\" d=\"M6,42V6h36v36H6z\" /><path fill=\"#000001\" d=\"M29.538 32.947c.692 1.124 1.444 2.201 3.037 2.201 1.338 0 2.04-.665 2.04-1.585 0-1.101-.726-1.492-2.198-2.133l-.807-.344c-2.329-.988-3.878-2.226-3.878-4.841 0-2.41 1.845-4.244 4.728-4.244 2.053 0 3.528.711 4.592 2.573l-2.514 1.607c-.553-.988-1.151-1.377-2.078-1.377-.946 0-1.545.597-1.545 1.377 0 .964.6 1.354 1.985 1.951l.807.344C36.452 29.645 38 30.839 38 33.523 38 36.415 35.716 38 32.65 38c-2.999 0-4.702-1.505-5.65-3.368L29.538 32.947zM17.952 33.029c.506.906 1.275 1.603 2.381 1.603 1.058 0 1.667-.418 1.667-2.043V22h3.333v11.101c0 3.367-1.953 4.899-4.805 4.899-2.577 0-4.437-1.746-5.195-3.368L17.952 33.029z\" /></svg>)\r\n\r\n}\r\n\r\nexport default JSLanguageIcon;","import React from 'react';\r\n\r\n\r\nconst Locked = () => {\r\n    return(<svg id=\"body_1\" width={194} height={194}>\r\n    <g transform=\"matrix(3.180328 0 0 3.180328 0 0)\">\r\n      <g transform=\"matrix(3.05 0 0 3.05 0 0)\">\r\n        <path d=\"M3 9L4 9L4 6C 4 2.6862912 6.6862917 0 10 0C 13.313709 0 16 2.6862912 16 6L16 6L16 9L17 9L17 20L3 20L3 9zM14 9L14 6C 14 4.5709376 13.237604 3.2504294 12 2.5358982C 10.762396 1.8213673 9.237604 1.8213673 7.9999995 2.5358984C 6.762395 3.2504299 6 4.5709376 6 6L6 6L6 9\" stroke=\"none\" fill=\"deepskyblue\" fillRule=\"nonzero\" />\r\n      </g>\r\n    </g>\r\n  </svg>);\r\n}\r\n\r\nexport default Locked;","import React, {useRef, useState, useEffect, useMemo} from 'react';\r\nimport hljs from 'highlight.js/lib/core';\r\nimport c from 'highlight.js/lib/languages/c';\r\nimport 'highlight.js/styles/night-owl.css';\r\nimport classes from './Editor.module.css'\r\nimport CLanguageIcon from '../Icons/CLanguageIcon';\r\nimport CPPLanguageIcon from '../Icons/CPPLanguageIcon';\r\nimport GoLanguageIcon from '../Icons/GoLanguageIcon';\r\nimport JSLanguageIcon from '../Icons/JSLangaugeIcon';\r\nimport Copy from '../Icons/Copy';\r\nimport Locked from '../Icons/Locked';\r\n\r\nconst obj = [{langName:'C', langCode:'c'}, {langName:'C++', langCode:'cpp'}, {langName:'Go', langCode:'go'}, {langName:'Javascript', langCode:'js'} ];\r\n\r\n\r\nconst Editor = () => {\r\n    \r\n    \r\n    \r\n    const codeBlockRef = useRef();\r\n    const [language, setLanguage] = useState(0);\r\n    const [driverCode, setDriverCode] = useState(`#include <stdio.h>\\n#include <stdlib.h>\\n\\nint main(int argc, char *argv[]){\\n\\treturn 0;\\n\\n}`);\r\n    // console.log(driverCode);\r\n    // const editorRef = useRef();\r\n    \r\n    useEffect(() => {\r\n        if(driverCode!==false){\r\n            console.log(\"used effect\");\r\n            hljs.registerLanguage('c', c);\r\n            hljs.highlightElement(codeBlockRef.current);\r\n\r\n        }\r\n        \r\n\r\n    },[driverCode]);\r\n\r\n\r\n    useEffect(() => {\r\n        switch(language){\r\n            case 0:\r\n                console.log(\"C\");\r\n                setDriverCode(`#include <stdio.h>\\n#include <stdlib.h>\\n\\nint main(int argc, char *argv[]){\\n\\treturn 0;\\n\\n}`);\r\n                break;\r\n            case 1:\r\n                console.log(\"C++\");\r\n                setDriverCode(false);\r\n                break;\r\n            case 2:\r\n                console.log(\"Go\");\r\n                setDriverCode(false);\r\n                break;\r\n            case 3:\r\n                console.log(\"Javascript\");\r\n                setDriverCode(false);\r\n                break;\r\n            }\r\n    },[language])\r\n\r\n    \r\n\r\n    return (<>\r\n\r\n        <div id=\"editor\" className={classes.editor}> \r\n        {/* style={{border:'2px solid white'}}> */}\r\n        <div className={classes.languageBar}>\r\n            <div className={classes.icons}>\r\n                <span className={classes.icon} style={{background : language===0 ? 'linear-gradient(-157deg,#072026, #0e667c,#072026)' : 'linear-gradient(157deg,#000, #072026,#000)'}} onClick = {() => setLanguage(0)}><CLanguageIcon/></span>\r\n                <span className={classes.icon} style={{background : language===1 ? 'linear-gradient(-157deg,#072026, #0e667c,#072026)' : 'linear-gradient(157deg,#000, #072026,#000)'}} onClick = {() => setLanguage(1)}><CPPLanguageIcon/></span>\r\n                <span className={classes.icon} style={{background : language===2 ? 'linear-gradient(-157deg,#072026, #0e667c,#072026)' : 'linear-gradient(157deg,#000, #072026,#000)'}} onClick = {() => setLanguage(2)}><GoLanguageIcon/></span>\r\n                <span className={classes.icon} style={{background : language===3 ? 'linear-gradient(-157deg,#072026, #0e667c,#072026)' : 'linear-gradient(157deg,#000, #072026,#000)'}} onClick = {() => setLanguage(3)}><JSLanguageIcon/></span>\r\n            </div>\r\n            <div className={classes.copy} onClick={() => {navigator.clipboard.writeText(codeBlockRef.current.innerText)}}>\r\n                <Copy/>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {!driverCode && <div className={classes.locked}><Locked/>Coming Soon in {obj[language].langName} !!!</div>}\r\n\r\n        {driverCode && <pre ref={codeBlockRef} className={`hljs language-c ${classes.edit}`}>\r\n            <code>\r\n                {driverCode}\r\n\r\n\r\n            </code>\r\n        </pre>}\r\n        </div>\r\n\r\n\r\n\r\n        </>)\r\n}\r\n\r\nexport default Editor;\r\n","import React, { useState, useRef } from 'react';\r\nimport Navbar from './components/UI/Navbar';\r\nimport TreeParentBody from './components/TreeStructure/TreeParentBody';\r\nimport TreeRow from './components/TreeStructure/TreeRow';\r\nimport TreeSandwich from './components/TreeStructure/TreeSandwich';\r\nimport Message from './components/UI/Message';\r\nimport Dashboard from './components/UI/Dashboard';\r\nimport UserConsole from './components/UI/UserConsole';\r\nimport {func} from './Logic/TreeMethods'\r\nimport { CDriverCode } from './Logic/CDriver';\r\nimport DummyData from './components/UI/DummyData';\r\nimport Footer from './components/TreeStructure/Footer';\r\nimport Editor from './components/UI/Editor';\r\n\r\n\r\n// import { ThemeConsumer } from 'styled-components';\r\n// import classes from './TreeNodePair.module.css';\r\n\r\n\r\n\r\n\r\nexport let tree = {\r\n  'node-0-0': { parent: null, show: true, value: 0, left: '1-0', right: '1-1', error: 0 },\r\n    'node-1-0': { parent: '0-0', show: true, value: 0,  left: '2-0',  right: '2-1', error: 0 },\r\n    'node-1-1': { parent: '0-0', show: true, value: 0,  left: '2-2',  right: '2-3', error: 0 },\r\n    'node-2-0': { parent: '1-0', show: true, value: 0,  left: '3-0',  right: '3-1', error: 0 },\r\n    'node-2-1': { parent: '1-0', show: true, value: 0,  left: '3-2',  right: '3-3', error: 0 },\r\n    'node-2-2': { parent: '1-1', show: true, value: 0,  left: '3-4',  right: '3-5', error: 0 },\r\n    'node-2-3': { parent: '1-1', show: true, value: 0,  left: '3-6',  right: '3-7', error: 0 },\r\n    'node-3-0': { parent: '2-0', show: true, value: 0,  left: '4-0',  right: '4-1', error: 0 },\r\n    'node-3-1': { parent: '2-0', show: true, value: 0,  left: '4-2',  right: '4-3', error: 0 },\r\n    'node-3-2': { parent: '2-1', show: true, value: 0,  left: '4-4',  right: '4-5', error: 0 },\r\n    'node-3-3': { parent: '2-1', show: true, value: 0,  left: '4-6',  right: '4-7', error: 0 },\r\n    'node-3-4': { parent: '2-2', show: true, value: 0,  left: '4-8',  right: '4-9', error: 0 },\r\n    'node-3-5': { parent: '2-2', show: true, value: 0, left: '4-10', right: '4-11', error: 0 },\r\n    'node-3-6': { parent: '2-3', show: true, value: 0, left: '4-12', right: '4-13', error: 0 },\r\n    'node-3-7': { parent: '2-3', show: true, value: 0, left: '4-14', right: '4-15', error: 0 },\r\n    'node-4-0': { parent: '3-0', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-1': { parent: '3-0', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-2': { parent: '3-1', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-3': { parent: '3-1', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-4': { parent: '3-2', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-5': { parent: '3-2', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-6': { parent: '3-3', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-7': { parent: '3-3', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-8': { parent: '3-4', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-9': { parent: '3-4', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-10': { parent: '3-5', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-11': { parent: '3-5', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-12': { parent: '3-6', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-13': { parent: '3-6', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-14': { parent: '3-7', show: true, value: 0, left: null, right: null, error: 0 },\r\n    'node-4-15': { parent: '3-7', show: true, value: 0, left: null, right: null }\r\n  }\r\n  \r\n  let indices = ['node-1-0', 'node-1-1', 'node-2-0', 'node-2-1', 'node-2-2', 'node-2-3', 'node-3-0', 'node-3-1', 'node-3-2', 'node-3-3', 'node-3-4', 'node-3-5', 'node-3-6', 'node-3-7', 'node-4-0', 'node-4-1', 'node-4-2', 'node-4-3', 'node-4-4', 'node-4-5', 'node-4-6', 'node-4-7', 'node-4-8', 'node-4-9', 'node-4-10', 'node-4-11', 'node-4-12', 'node-4-13', 'node-4-14', 'node-4-15'];\r\n  \r\n  let root = {\r\n    parent : null,\r\n    id : 'node-0-0',\r\n    value : 0,\r\n    left : '00',\r\n    right : '01'\r\n  }\r\nlet rootId = 'node-0-0';\r\nlet lastUnbalancedNode = null;\r\n\r\nlet nodeIds = ['node1'];\r\n\r\nlet treeheight = 1;\r\n// let nodeRank = 0;\r\nlet currentHeightNodes = [];\r\nlet expanded = false;\r\n\r\n\r\nconst App = () => {\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  // const [rows, setRows] = useState([0,1]);\r\n  const [nullState, setNullState] = useState(\"Hide\");\r\n  const [nullVisibility, setNullVisibility] = useState('');\r\n  const [consoleMessage, setConsoleMessage] = useState([0,'']);\r\n  const [height, setHeight] = useState([0,1]);\r\n  const [dummy, setDummy] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const dashRef = useRef();\r\n  let currentPair = [0,1];\r\n  let  nodes = 0;\r\n  console.log(\"Hi\");\r\n  // const [currentPair, setCurrentPair] = useState([0,1]);\r\n  // const [tree, setTree] = useState([]);\r\n  \r\n  \r\n  // let tree = [];\r\n  \r\n  \r\n  \r\n  // const left = 0;\r\n\r\n  if(lastUnbalancedNode){\r\n    // console.log(lastUnbalancedNode)\r\n    // console.log(element);\r\n    let element = document.querySelector(`input[data-id=${indices[lastUnbalancedNode]}]`);\r\n    element.style.background = 'red'; \r\n  }\r\n\r\n\r\n  const swap = (i,j) => {\r\n    if(i<j){\r\n      // console.log(i,j);\r\n      const temp = tree[indices[j]].value;\r\n      console.log('temp', temp);\r\n      tree[indices[j]].value =  tree[indices[i]].value;\r\n      tree[indices[i]].value = temp;\r\n      swap(i+1, j-1);\r\n    }\r\n  }\r\n  \r\n  \r\n  const invertBinaryTree = () => {\r\n    expandSidebar(-100);\r\n    // console.log(tree);\r\n    for(let i=0; i<(height.length); i+=2){\r\n      swap(i,(2*i)+1);\r\n    }\r\n    console.log(tree);\r\n    setDummy(prevState =>  !prevState);\r\n    \r\n    // return App();\r\n  }\r\n  \r\n\r\n  const setId = () => {\r\n    let a = indices[currentPair[0]]; \r\n    let b = indices[currentPair[1]];\r\n    // console.log(tree[a], tree[b]);\r\n    // console.log(a,b);\r\n    let res = [a, b, tree[a].show, tree[b].show, tree[a].value, tree[b].value];\r\n    currentPair = currentPair.map(x => x+2);\r\n    nodes+=2\r\n    // console.log(\"Current Pair \" ,currentPair);\r\n    // console.log(res);\r\n    return res;\r\n  }\r\n  \r\n\r\n  const addRow = () => {\r\n    console.log(\"Adding Row\");\r\n    expandSidebar(-100);\r\n    setHeight(prevState => [...height, height.at(height.length-1)*2]);\r\n    currentPair = [0,1];\r\n\r\n\r\n  }\r\n\r\n  const toggleNullState = () => {\r\n    expandSidebar(-100);\r\n    let newState = nullState===\"Show\" ? \"Hide\" : \"Show\";\r\n    for(let i=0; i<nodes; i++){\r\n      if(!tree[indices[i]].value){\r\n        tree[indices[i]].show = false;\r\n      }\r\n    }\r\n    setNullState(newState);\r\n    // console.log(tree);\r\n\r\n  \r\n  }\r\n\r\n  const inputChangeHandler = (event) => {\r\n    // console.log(event.target.value);\r\n    let x = event.target;\r\n    // console.log(x.dataset.id);\r\n    tree[x.dataset.id].value = event.target.value;\r\n    // console.log(tree.map(i => i.value));\r\n    \r\n  }\r\n\r\n  const treeActionFunction = async(opt) => {\r\n    // console.log(\"Hey\");\r\n    expandSidebar(-100);\r\n    setLoading(true);\r\n    let res = await func(opt);\r\n    console.log(\"result\",);\r\n    if(!res[0]){\r\n      setLoading(false);\r\n      setConsoleMessage([0, \"Please Balance the Tree !!!\"]);\r\n      lastUnbalancedNode = res[1]-1;\r\n      // tree[indices[lastUnbalancedNode]].error = 1;\r\n      console.log(indices[lastUnbalancedNode]);\r\n      let element = document.querySelector(`input[data-id=${indices[lastUnbalancedNode]}]`);\r\n      // element.style.background = 'red';\r\n      element.classList.add('errorNode');\r\n      // console.log(element);\r\n      \r\n      \r\n      \r\n    }else{\r\n      setLoading(false);\r\n      // tree[indices[lastUnbalancedNode]].error = 0;\r\n      res[1] = res[1].toString();\r\n      setConsoleMessage(res);\r\n      // document.querySelector(`div[data-id='${indices[lastUnbalancedNode]}']`).style.border = '0px';\r\n    }\r\n  }\r\n\r\n  const expandSidebar = (newWidth) => {\r\n    dashRef.current.style.transform = `translateX(${newWidth}%)`;\r\n    console.log(newWidth ? \"Slid out\" : \"Slid in\");\r\n  }\r\n\r\n\r\n\r\n  CDriverCode();\r\n\r\n  return (\r\n    <>\r\n      <Navbar expandSidebar={expandSidebar} addRow={addRow} toggleNullState={toggleNullState} nullState={nullState} invertBinaryTree={invertBinaryTree}/>\r\n      {/* <Dashboard dashRef={dashRef} expanded={expanded} treeActionFunction={treeActionFunction} addRow={addRow} toggleNullState={toggleNullState} nullState={nullState} invertBinaryTree={invertBinaryTree}/> */}\r\n      <Dashboard dashRef={dashRef} expanded={expanded} nullState={nullState}  addRow={addRow} actions={[addRow,() => {treeActionFunction(1)},() => {treeActionFunction(2)},() => {treeActionFunction(3)}, invertBinaryTree, toggleNullState]}/>\r\n\r\n      <UserConsole message={consoleMessage} loading={loading}/>\r\n      <TreeParentBody>\r\n        <Message message={'Please provide non-zero values for each node (Nodes with 0 value will be treated as null) and also do balance the Binary Tree'}/>\r\n        {/* <TreeRow></TreeRow> */}\r\n        {height.map(x => <><TreeRow rootValue={tree['node-0-0'].value} setId={setId} inputChangeHandler={inputChangeHandler} key={Math.random()*1000}  pairs={x} rootId={rootId}/><TreeSandwich pairs={x} endif={height.at(height.length-1)}/></>)}\r\n      </TreeParentBody>\r\n      <Editor/>\r\n      {/* <DummyData/> */}\r\n      <Footer/>\r\n     \r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}